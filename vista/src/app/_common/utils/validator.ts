import { Validators } from '@angular/forms';

/* tslint:disable: max-line-length */
export class Validator extends Validators {

  static ipReg = '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$';
  static asReg = '(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{3}|[1-9][0-9]{2}|[1-9][0-9]|[0-9])';
  static md5Reg = '^[a-zA-Z0-9]{0,80}$';

  static nonChineseReg = '^[^\u4e00-\u9fa5]+$';

  static portReg = '^(0|([1-9]\\d{0,3})|([1-5]\\d{0,4})|(6[0-4]\\d{3})|(65[0-4]\\d{2})|(655[0-2]\\d)|(6553[0-5]))$';

  static asPathReg = '^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9])( (6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9]))*$';
  // 0-4294967295
  static localPrefReg = '^(0|([1-9]\\d{0,8})|([1-3]\\d{0,9})|(4[0-1]\\d{8})|(42[0-8]\\d{7})|(429[0-3]\\d{6})|(4294[0-8]\\d{5})|(42949[0-5]\\d{4})|(429496[0-6]\\d{3})|(4294967[0-1]\\d{2})|(42949672\\d[0-5]))$';

  static communityReg = '^((([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]):([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))|(PLANNED_SHUT)|(ACCEPT_OWN)|(ROUTE_FILTER_TRANSLATED_v4)|(ROUTE_FILTER_v4)|(ROUTE_FILTER_TRANSLATED_v6)|(ROUTE_FILTER_v6)|(NO_EXPORT)|(NO_ADVERTISE)|(NO_EXPORT_SUBCONFED)|(NOPEER))( (([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]):([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])|(PLANNED_SHUT)|(ACCEPT_OWN)|(ROUTE_FILTER_TRANSLATED_v4)|(ROUTE_FILTER_v4)|(ROUTE_FILTER_TRANSLATED_v6)|(ROUTE_FILTER_v6)|(NO_EXPORT)|(NO_ADVERTISE)|(NO_EXPORT_SUBCONFED)|(NOPEER)))*$';

  static prefixesReg = '^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\\/)([1-2][0-9]|[3][0-2]|[0-9]) )*((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\\/)([1-2][0-9]|[3][0-2]|[0-9]))$';

  static prefixReg = '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\\/)([1-2][0-9]|[3][0-2]|[0-9])$';

  static descReg = '^.{0,200}$';
  static dscpReg = '^[0-9]$|^[1-5]\\d$|^6[0-3]$';

  static flowspecDscp = '(((>=)|(<=)|=|>|<)([0-9]|([1-5]\\d{1})|(6[0-3]))\\|)*(((>=)|(<=)|=|>|<)([0-9]|([1-5]\\d{1})|(6[0-3]))$)';

  // = 0~65535
  static flowspecPort = '(((>=)|(<=)|=|>|<)(0|([1-9]\\d{0,3})|([1-5]\\d{0,4})|(6[0-4]\\d{3})|(65[0-4]\\d{2})|(655[0-2]\\d)|(6553[0-5]))\\|)*(((>=)|(<=)|=|>|<)(0|([1-9]\\d{0,3})|([1-5]\\d{0,4})|(6[0-4]\\d{3})|(65[0-4]\\d{2})|(655[0-2]\\d)|(6553[0-5]))$)';

  static numberOnly = '^[0-9]*$';

  // user-create
  static nameReg = '^[a-zA-Z\u4e00-\u9fa50-9_,-]{1,24}$';
  static passwordReg = '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[A-Z])(?=.*?[#?!_@$%^&*-]).{8,30}$';
  static phonenumberReg = '^[0-9]{1,}$';
  static emailReg = '^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w{2,3}){1,3})$';

  // policy-create
  static actionNameReg = `^[a-zA-Z\u4e00-\u9fa50-9_-]{1,16}$`;

  // ipv4-unicast-create
  static asNumReg = '^(0|([1-9]\\d{0,3})|([1-5]\\d{0,4})|(6[0-4]\\d{3})|(65[0-4]\\d{2})|(655[0-2]\\d)|(6553[0-5]))$';
  static dmzlinkReg = '^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[0-9]):(0|([1-9]\\d{0,8})|([1-3]\\d{0,9})|(4[0-1]\\d{8})|(42[0-8]\\d{7})|(429[0-3]\\d{6})|(4294[0-8]\\d{5})|(42949[0-5]\\d{4})|(429496[0-6]\\d{3})|(4294967[0-1]\\d{2})|(42949672\\d[0-5]))$';
  // 1-4294967295
  static colorReg = '^(([1-9]\\d{0,8})|([1-3]\\d{0,9})|(4[0-1]\\d{8})|(42[0-8]\\d{7})|(429[0-3]\\d{6})|(4294[0-8]\\d{5})|(42949[0-5]\\d{4})|(429496[0-6]\\d{3})|(4294967[0-1]\\d{2})|(42949672\\d[0-5]))$';  // 1-4294967295
  // 0-4294967295
  static medReg = Validator.localPrefReg;  // 0-4294967295

  // netconf-create
  static localPolicyNameReg = '^[a-zA-Z0-9_-]{1,128}$';
  // 16~1048575
  static bindingSidReg = '^1[6-9]$|^[2-9]\\d$|^[1-9]\\d{2,5}$|^10[0-3]\\d{4}$|^104[0-7]\\d{3}$|^1048[0-4]\\d{2}$|^10485[0-6]\\d$|^104857[0-5]$';  // 16~1048575
  // 1~10
  static multiplierReg = '^[1-9]$|^10$';  // 1~10
  // 50~30000
  static minIntervalReg = '^[5-9]\\d$|^[1-9]\\d{2,3}$|^[1-2]\\d{4}$|^30000$';  // 50~30000
  // 1-65535
  static indexReg = '^[1-9]\\d{0,3}$|^[1-5]\\d{4}$|^6[0-4]\\d{3}$|^65[0-4]\\d{2}$|^655[0-2]\\d$|^6553[0-5]$';  // 1-65535
  // 0-1048575
  static segmentReg = '^0$|^[1-9]\\d{0,5}$|^10[0-3]\\d{4}$|^104[0-7]\\d{3}$|^1048[0-4]\\d{2}$|^10485[0-6]\\d$|^104857[0-5]$';  // 0-1048575
  // ip or 0-1048575
  static ipOrSegmentReg = '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(0|[1-9]\\d{0,5}|10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-5])$';  // ip or 0-1048575
  // 1-4294967295
  static weightReg = Validator.colorReg;
  // 1-65535
  static pathPreferenceReg = Validator.indexReg;
  // 1-65535
  static disjoinGroupIdReg = Validator.indexReg;
  static metricSidLimitReg = '^(0|[1-9]\\d{0,1}|1\\d{2}|2[0-4]\\d|25[0-5])$';
  static metricAbsoluteReg = '^(0|[1-9]\\d{0,8}|1\\d{9}|20\\d{8}|21[0-3]\\d{7}|214[0-6]\\d{6}|2147[0-3]\\d{5}|21474[0-7]\\d{4}|214748[0-2]\\d{3}|2147483[0-5]\\d{2}|21474836[0-3]\\d|214748364[0-7])$';
  static metricRelativeReg = '^(0|[1-9]\\d{0,1}|100)$';
  static linkColorReg = '^(([1-9]\\d{0,8})|([1-3]\\d{0,9})|(4[0-1]\\d{8})|(42[0-8]\\d{7})|(429[0-3]\\d{6})|(4294[0-8]\\d{5})|(42949[0-5]\\d{4})|(429496[0-6]\\d{3})|(4294967[0-1]\\d{2})|(42949672\\d[0-5]))(,(([1-9]\\d{0,8})|([1-3]\\d{0,9})|(4[0-1]\\d{8})|(42[0-8]\\d{7})|(429[0-3]\\d{6})|(4294[0-8]\\d{5})|(42949[0-5]\\d{4})|(429496[0-6]\\d{3})|(4294967[0-1]\\d{2})|(42949672\\d[0-5])))*$'; // 1-4294967295,1-4294967295

  // bgp-sr-action-create
  // = 0~4294967295
  static distinguisherReg = '^(0|([1-9]\\d{0,8})|([1-3]\\d{0,9})|(4[0-1]\\d{8})|(42[0-8]\\d{7})|(429[0-3]\\d{6})|(4294[0-8]\\d{5})|(42949[0-5]\\d{4})|(429496[0-6]\\d{3})|(4294967[0-1]\\d{2})|(42949672\\d[0-5]))$';
  // 32位IP地址:16位用户自定义数，例如：192.168.122.15:1
  static srRouteTargetReg = '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):\\d{1,16}(\\s((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):\\d{1,16}))*$';
  // 0~65535 或输入IPV4格式
  static ipOrSidReg = `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(0|([1-9]\\d{0,3})|([1-5]\\d{0,4})|(6[0-4]\\d{3})|(65[0-4]\\d{2})|(655[0-2]\\d)|(6553[0-5]))$`;
  // sid =0~1048575
  static sidReg = Validator.segmentReg;
  // 0-1048575 或输入IPV4格式
  static appendingSidReg = Validator.ipReg + '|' + Validator.sidReg;
  // = 0~4294967295 or 16进制数 0x0 to 0xFFFFFFFF
  static affinityColorReg = Validator.distinguisherReg + '|^0[xX][A-Fa-f0-9]{1,8}$';
  // BMP 0~32
  static maskLength = '(^[0-9]$)|(^[1-2][0-9]$)|(^[3][0-2]$)';
}
